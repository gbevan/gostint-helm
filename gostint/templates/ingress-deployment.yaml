{{- if .Values.ingress.enabled -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/add-base-url: "true"
    # ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/secure-backends: "true"
  name: {{ template "gostint.fullname" . }}-ingress-gostint
  labels:
    app: {{ template "gostint.name" . }}
    chart: {{ template "gostint.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  rules:
    - http:
        paths:
          - path: /gostint
            backend:
              serviceName: {{ template "gostint.fullname" . }}
              servicePort: 3232
  tls:
    - secretName: {{ .Values.ingress.tls.secretName }}
{{- if .Values.vault.internalToChart }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    nginx.ingress.kubernetes.io/rewrite-target: /
    # ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/secure-backends: "true"
  name: {{ template "gostint.fullname" . }}-ingress-vault
  labels:
    app: {{ template "gostint.name" . }}
    chart: {{ template "gostint.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  rules:
    - http:
        paths:
          # NOTE: This path-based-routing approach causes the ingress controller
          # to terminate the TLS in the controller in order to route it -
          # this is not ideal for production use, where you need end-2-end
          # unbroken TLS encryption - I would recommend investigating using
          # ssl-passthrough instead, with SNI ServerName routing.
          - path: /vault
            backend:
              serviceName: {{ .Release.Name }}-vault
              servicePort: 8200
  tls:
    - secretName: {{ .Values.ingress.tls.secretName }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    # ingress.kubernetes.io/ssl-passthrough: "true"
    # nginx.ingress.kubernetes.io/secure-backends: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /ui
  name: {{ template "gostint.fullname" . }}-ingress-vault-ui
  labels:
    app: {{ template "gostint.name" . }}
    chart: {{ template "gostint.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  rules:
    - http:
        paths:
          # Workaround for ui redirect in vault
          - path: /ui
            backend:
              serviceName: {{ .Release.Name }}-vault
              servicePort: 8200
          - path: /v1
            backend:
              serviceName: {{ .Release.Name }}-vault
              servicePort: 8200
  tls:
    - secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
{{- end }}
{{- if .Values.sniIngress.enabled -}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: sni-nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    # "ingress.kubernetes.io/ssl-passthrough": "true" # old style
    # mginx.ingress.kubernetes.io/ssl-passthrough: "true"
  name: {{ template "gostint.fullname" . }}-ingress-vault-sni
  labels:
    app: {{ template "gostint.name" . }}
    chart: {{ template "gostint.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  rules:
    - host: snigostint.default.pod
      http:
        paths:
          # Workaround for ui redirect in vault
          - path: /
            backend:
              serviceName: {{ template "gostint.fullname" . }}
              servicePort: 3232
{{- if .Values.vault.internalToChart }}
    - host: snivault.default.pod
      http:
        paths:
          # Workaround for ui redirect in vault
          - path: /
            backend:
              # serviceName: {{ template "gostint.fullname" . }}-vault
              serviceName: {{ .Release.Name }}-vault
              servicePort: 8200
{{- end }}
  tls:
{{- if .Values.vault.internalToChart }}
    - secretName: snigostint #snivault
      hosts:
        - snivault.default.pod
{{- end }}
    - secretName: snigostint
      hosts:
        - snigostint.default.pod

{{- end }}
